
execute pathogen#infect()
syntax on
filetype plugin indent on

set autoread
set background=dark
set nocompatible noincsearch hlsearch
set backspace=indent,eol,start            " <BS> works at start of insert, bol, and autoindent
set switchbuf=usetab
set guicursor=n-v-c-sm:block,i-ci-ve:ver25,r-cr-o:hor20
  \,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor
  \,sm:block-blinkwait175-blinkoff150-blinkon175
set statusline=%<%f\ %h%m%r%=%-14.(%l,%c%V%)\ %P
set wildignore=*/.git/*,*.pyc,*.class,*.jar,*.war,out/**

" Get swap files out of the way
set directory=/private/tmp//,/tmp//

" Local commands
let mapleader = ","
let localmapleader = ","
nmap <Leader>gc :silent !git add -A<CR>:Gcommit<CR>

" Terminal config
" set scrollback=10000
nmap <Leader>R :call eraserhd#goto("repl")<CR>
nmap <Leader>r :call eraserhd#goto("repl", "insert")<CR>
nmap <Leader>T :call eraserhd#goto("todo")<CR>
nmap <Leader>t :call eraserhd#goto("todo", "insert")<CR>
nmap <Leader>z :call eraserhd#goto("zeal")<CR>
nmap <Leader><Leader> :call eraserhd#repeat_last_repl_command()<CR>

" I use <C-a>o in tmux to switch to other window, but <C-w>o in Vim closes
" all my crap!  Deleted.
nmap <C-w>o <NOP>
tmap <C-w>o <NOP>

command! -nargs=1 -complete=shellcmd R call eraserhd#run_repl_command(<q-args>)

" Fzy
function! Fzy(choice_command, vim_command)
  try
    let output = system(a:choice_command . " |fzy")
  catch /Vim:Interrupt/
    " Swallows errors from <C-c>, allow redraw! below
  endtry
  redraw!
  if v:shell_error == 0 && !empty(output)
    execute a:vim_command output
  endif
endfunction

nnoremap <C-P> :<C-U>call Fzy('git ls-files', 'edit')<CR>

" choosewin
let g:choosewin_label_align = 'left'
let g:choosewin_color_label = {
  \ 'gui': ['red', 'white', 'bold'],
  \ 'cterm': ['red', 'white', 'bold'] }
let g:choosewin_color_label_current = g:choosewin_color_label

nmap <C-w>y <Plug>(choosewin)
tmap <C-w>y <C-w>:ChooseWin<CR>
nmap <C-w>Y :<C-u>ChooseWinSwap<CR>
tmap <C-w>Y <C-w>:<C-u>ChooseWinSwap<CR>

" Configure vim-angry so that ca, and ci, change arguments, rather than caa
" and cia -- that's intuitive to me and I imagine that aa could be useful
" elsewhere.
let g:angry_disable_maps = 1
vmap <silent> a, <Plug>AngryOuterPrefix
omap <silent> a, <Plug>AngryOuterPrefix
vmap <silent> i, <Plug>AngryInnerPrefix
omap <silent> i, <Plug>AngryInnerPrefix

" Projectionist
let g:projectionist_heuristics = {
  \ "test/&src/&project.clj": {
  \   "src/*.clj": {
  \     "type": "clj",
  \     "alternate": "test/{}_test.clj"
  \   },
  \   "src/*.cljc": {
  \     "type": "cljc",
  \     "alternate": "test/{}_test.clj"
  \   },
  \   "src/*.cljs": {
  \     "type": "cljs",
  \     "alternate": "test/{}_test.clj"
  \   },
  \   "test/*_test.clj": {
  \     "type": "test",
  \     "alternate": [
  \       "src/{}.cljc",
  \       "src/{}.clj",
  \       "src/{}.cljs"
  \     ]
  \   }
  \ }}

" vim-sexp
let g:sexp_enable_insert_mode_mappings = 0

" File types

let g:haddock_browser = "/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"
function! HaskellBuffer()
  " Same as Idris
  nmap <buffer> <Bslash>t :GhcModType<CR>
  nmap <buffer> <Bslash>r :GhcModCheck<CR>
  nmap <buffer> <Bslash>c :GhcModSplitFunCase<CR>
  nmap <buffer> <Bslash>d :GhcModSigCodegen<CR>
  nmap <buffer> K :execute "HoogleInfo " . expand("<cWORD>")<CR>
endfunction
augroup Haskell
  autocmd!
  autocmd FileType haskell set sts=2 sw=2 ai et
  autocmd FileType haskell call HaskellBuffer()
augroup end

augroup JavaScript
  autocmd!
  autocmd FileType javascript,json set sts=2 sw=2 ai et
augroup end

augroup Scheme
  autocmd!
  autocmd FileType scheme hi Error NONE|set sts=2 sw=2 et lisp
augroup end

augroup VimL
  autocmd!
  autocmd FileType vim set sts=2 sw=2 ai et
augroup end

augroup Terminal
  autocmd!
  autocmd BufWinEnter if &buftype == "terminal" | setlocal nonumber | endif
augroup end

augroup Terraform
  autocmd!
  autocmd FileType terraform set sts=2 sw=2 ai et
augroup end

" FIXME: Move to markdorg plugin
augroup Markdorg
  autocmd!
  autocmd FileType markdown setlocal textwidth=78 formatoptions-=l
augroup end
