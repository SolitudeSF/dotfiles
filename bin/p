#!/bin/bash

set -e

project_directory() {
    local project="$1" cdpath_dirs cdpath
    IFS=: read -ra cdpath_dirs <<< "$CDPATH"
    for cdpath in "${cdpath_dirs[@]}"; do
        if [[ -d "$cdpath/$project" ]]; then
            printf '%s/%s\n' "$cdpath" "$project"
            return 0
        fi 
    done
    return 1
}

project_todo() {
    printf '%s\n' ~/src/data/"$1"-todo.md
}

project="$1"
if [[ -z "$project" ]]; then
    printf 'p: need a project name.\n' >&2
    exit 1
fi

project_dir="$(project_directory "$project")"
if [[ -z $project_dir ]]; then
    printf 'p: could not find project directory.\n' >&2
    exit 1
fi

cd "$project_dir"

if tmux select-window -t "${project}" 2>/dev/null; then
    exit 0
elif (( $(tmux display-message -p '#{window_panes}') != 1 )); then
    printf 'p: this window is already used.\n' >&2
    exit 1
else
    tmux rename-window "$project"
    kak -s "$project" -d </dev/null >/dev/null 2>&1 &

    tmux split-window -h -c "${project_dir}" reattach-to-user-namespace bash -l 

    todo="$(project_todo "$project")"
    if [[ ! -f $todo ]]; then
        printf '# TODO\n\n' >"$todo"
    fi
    tmux split-window -b -v -c "${project_dir}" -l15 reattach-to-user-namespace kak -c "${project}" "$todo"
    exec kak -c "${project}"
fi
