set-option -g prefix C-a
bind-key C-a last-window
set-option -g default-command "reattach-to-user-namespace -l bash"
set-option -g update-environment ''

##### Basic Usage #####

# By default, we'll use C-a as the prefix key.
unbind C-b
set -g prefix 'C-a'; bind 'C-a' send-prefix
bind 'a' send-prefix

# Reload tmux config so we can pick up changes to this file without needing to restart tmux
bind r source-file ~/.tmux.conf \; display "Reloaded tmux configuration!"

# Reduce the command delay time to something a bit shorter
set -sg escape-time 1
# Extend the repeat interval for repeatable commands (e.g., resize-pane)
set -sg repeat-time 1000

##### Scrollback Navigation #####

# Use vi-style navigation in Copy mode (which is also scrollback mode)
setw -g mode-keys vi
bind -Tcopy-mode-vi Escape send-keys -X cancel
bind -Tcopy-mode-vi i send-keys -X cancel
bind -Tcopy-mode-vi v send-keys -X begin-selection
bind -Tcopy-mode-vi y send-keys -X copy-selection-and-cancel
bind -Tcopy-mode-vi o send-keys -X copy-pipe-and-cancel 'xargs -0 open'

set -s focus-events on

setw -g xterm-keys on
set -sa terminal-overrides ",xterm*:kLFT5=\eOD:kRIT5=\eOC:kUP5=\eOA:kDN5=\eOB:smkx@:rmkx@" # Shift+Arrow

set -sa terminal-overrides ',xterm*:sitm=\E[3m' # italics

##### Window/Pane Management #####

# Split windows more intuitively (except for the fact that tmux doesn't
# understand that a horizontal split means the pane should be split down the
# middle horizontally, and likewise for a vertical split).
bind | split-window -h -c '#{pane_current_path}' # horizontal columns
bind - split-window -v -c '#{pane_current_path}' # vertical rows

# Navigate panes vim-style!
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# And windows too!
bind -r C-l select-window -t :+
bind -r C-h select-window -t :-

# Quickly jump between two windows
bind i last-window

# Resizing panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# C-w mode
bind -Troot C-w switch-client -Tpane-menu
bind -Tpane-menu = select-layout -E
bind -Tpane-menu 0 select-pane -t 0
bind -Tpane-menu 1 select-pane -t 1
bind -Tpane-menu 2 select-pane -t 2
bind -Tpane-menu 3 select-pane -t 3
bind -Tpane-menu 4 select-pane -t 4
bind -Tpane-menu 5 select-pane -t 5
bind -Tpane-menu 6 select-pane -t 6
bind -Tpane-menu 7 select-pane -t 7
bind -Tpane-menu 8 select-pane -t 8
bind -Tpane-menu 9 select-pane -t 9
bind -Tpane-menu a select-window -t 0 \; select-pane -t 0
bind -Tpane-menu h select-pane -L
bind -Tpane-menu j select-pane -D
bind -Tpane-menu k select-pane -U
bind -Tpane-menu l select-pane -R
bind -Tpane-menu p select-pane -t !

# C-w s N - swap current with pane N
bind -Tpane-menu s switch-client -Tswap-pane-menu
bind -Tswap-pane-menu 0 swap-pane -t 0
bind -Tswap-pane-menu 1 swap-pane -t 1
bind -Tswap-pane-menu 2 swap-pane -t 2
bind -Tswap-pane-menu 3 swap-pane -t 3
bind -Tswap-pane-menu 4 swap-pane -t 4
bind -Tswap-pane-menu 5 swap-pane -t 5
bind -Tswap-pane-menu 6 swap-pane -t 6
bind -Tswap-pane-menu 7 swap-pane -t 7
bind -Tswap-pane-menu 8 swap-pane -t 8
bind -Tswap-pane-menu 9 swap-pane -t 9
bind -Tswap-pane-menu p swap-pane -t !

# Make our own copy-mode with Kakoune!
bind -Tpane-menu N run-shell 'tmux set-buffer -b copy-pane-id "#D"' \; \
    new-window -n copy-mode -d '\
      pane_id="$(tmux show-buffer -b copy-pane-id)" ;\
      file=$(mktemp) ;\
      tmux capture-pane -t "${pane_id}" -S- -E- -J -e -p >"$file" ;\
      cursor_y=$(tmux display-message -t "${pane_id}" -p "#{cursor_y}") ;\
      cursor_x=$(tmux display-message -t "${pane_id}" -p "#{cursor_x}") ;\
      pane_height=$(tmux display-message -t "${pane_id}" -p "#{pane_height}") ;\
      line_count="$(wc -l "$file" |awk "{print \$1}")" ;\
      sel_line=$(( line_count - ( pane_height - cursor_y ) + 1 )) ;\
      printf "sel = %s\n" "$line_count" >>/tmp/debug.log ;\
      cursor="${sel_line}.${cursor_x},${sel_line}.${cursor_x}" ;\
      printf "cursor = %s\n" "$cursor" >>/tmp/debug.log ;\
      command kak -e "\
         edit $file ;\
         exec gj ;\
         try %{\
            ansi-render ;\
         } catch %{\
            exec -draft %{%s\x1B[\d;]+m<ret><a-d>} ;\
         } ;\
         write ;\
         set-option buffer readonly true ;\
         set-option window filetype tmux-copy ;\
         rename-buffer *tmux-copy* ;\
         select $cursor ;\
         " ; \
      rm -f "$file" ; \
      tmux swap-pane -s :copy-mode.0 -t : ; \
    ' \; \
    swap-pane -s :copy-mode.0 -t :

bind -Tpane-menu . send-keys C-w
bind -Tpane-menu w send-keys C-w
bind -Tpane-menu C-w send-keys C-w

## REPLy stuff
bind -Tpane-menu r select-pane -t '{bottom-right}'
bind -Tpane-menu , send-keys -t '{bottom-right}' C-p Enter

# Support true color in Alacritty
set -sa terminal-overrides ",xterm-256color:Tc"
set -g default-terminal "tmux-256color"

# Pane borders
set -g pane-border-status bottom
set -g pane-border-style "fg=#181a1f,bg=#292d3e"
set -g pane-active-border-style "fg=#181a1f,bg=#292d3e"
set -g pane-border-format "#[bg=#{?pane_active,#bfc7d5,#292d3e},fg=#292d3e]#[fg=#{?pane_active,#292d3e,#697098}] #P #[fg=#{?pane_active,#bfc7d5,#292d3e},bg=#697098]#[fg=#{?pane_active,#bfc7d5,#292d3e}] #T #[bg=#292d3e,fg=#697098]"

# Command line
set -g message-style "fg=#bfc7d5,bg=#292d3e,bright"

# Status bar
set -g status-style "fg=white,bg=#292d3e"
set -g status-position top

set -g status-justify left
set -g status-left-length 40

set -g status-left "#[fg=#585858,bg=#e4e4e4] #S #[fg=#e4e4e4,bg=#0087af]#[fg=#0087af,bg=#005f87]#[fg=#005787,bg=#333333] "
set -g status-right "#[bg=#333333,fg=white] %d %b %R "
set -g status-interval 15

# Window list
setw -g window-status-format "#I #W"
setw -g window-status-separator "  "
setw -g window-status-style "fg=#bfc7d5"
setw -g window-status-current-format "#I #W"
setw -g window-status-current-style fg=white,bright
setw -g window-status-activity-style fg=white,dim

# Monitor windows for activity
setw -g monitor-activity on
set -g visual-activity on

run -b '~/.tmux/plugins/tpm/tpm'
