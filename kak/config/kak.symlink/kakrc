# General Settings
# ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

set-option global autoreload yes

hook global BufWritePre .* %{ nop %sh{ mkdir -p $(dirname "$kak_hook_param") }}

# Appearance
# ‾‾‾‾‾‾‾‾‾‾

colorscheme desertex

set-option global ui_options ncurses_assistant=none ncurses_status_on_top=true

add-highlighter global/matching show-matching

set-face global LineNumbersWrapped black
add-highlighter global/number number-lines

set-face global Whitespace rgb:333333+f
add-highlighter global/whitespace show-whitespaces -spc ' ' -tab '➤' -lf '↩'

# Soft tabs
# ‾‾‾‾‾‾‾‾‾

define-command -params 0 expand-tabs %{
    hook -group expand-tabs window InsertChar \t %{ try %{
        execute-keys -draft "h<a-h><a-k>\A\h+\z<ret><a-;>;%opt{indentwidth}@"
    } }
    hook -group expand-tabs window InsertDelete ' ' %{ try %{
        execute-keys -draft "h<a-h><a-k>\A\h+\z<ret>i<space><esc><lt>"
    } }
}

define-command -params 0 keep-tabs %{
    remove-hooks window expand-tabs
}

hook global WinSetOption filetype=(?!makefile).* expand-tabs
hook global WinSetOption filetype=makefile keep-tabs

# FZF
# ‾‾‾

define-command -docstring 'Invoke fzf to open a file' -params 0 fzf-edit %{
    evaluate-commands %sh{
        if [ -z "${kak_client_env_TMUX}" ]; then
            printf 'fail "client was not started under tmux"\n'
        else
            file="$(ag -l -f |TMUX="${kak_client_env_TMUX}" fzf-tmux -d 15)"
            if [ -n "$file" ]; then
                printf 'edit "%s"\n' "$file"
            fi
        fi
    }
}

alias global fze fzf-edit

# LSP
# ‾‾‾

evaluate-commands %sh{kak-lsp --kakoune -s "${kak_session}"}
