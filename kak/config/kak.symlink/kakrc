# General Settings
# ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

set-option global autoreload yes

hook global BufWritePre .* %{ nop %sh{ mkdir -p $(dirname "$kak_hook_param") }}

# Appearance
# ‾‾‾‾‾‾‾‾‾‾

colorscheme desertex

set-option global ui_options ncurses_assistant=none ncurses_status_on_top=true

add-highlighter global/matching show-matching

set-face global LineNumbersWrapped black

set-face global Whitespace rgb:333333+f
add-highlighter global/whitespace show-whitespaces -spc ' ' -tab '➤' -lf '↩'

hook global WinSetOption filetype=(?!tmux-copy).* %{
    add-highlighter window/number number-lines
}
hook global WinSetOption filetype=tmux-copy %{
    remove-highlighter window/number
}

# Stolen from mawww
declare-option -hidden regex curword
set-face global CurWord default,rgb:4a4a4a

hook global NormalIdle .* %{
    eval -draft %{ try %{
        exec <space><a-i>w <a-k>\A\w+\z<ret>
        set-option buffer curword "\b\Q%val{selection}\E\b"
    } catch %{
        set-option buffer curword ''
    } }
}
add-highlighter global/ dynregex '%opt{curword}' 0:CurWord

# Soft tabs
# ‾‾‾‾‾‾‾‾‾

define-command -params 0 expand-tabs %{
    hook -group expand-tabs window InsertChar \t %{ try %{
        execute-keys -draft "h<a-h><a-k>\A\h+\z<ret><a-;>;%opt{indentwidth}@"
    } }
    hook -group expand-tabs window InsertDelete ' ' %{ try %{
        execute-keys -draft "h<a-h><a-k>\A\h+\z<ret>i<space><esc><lt>"
    } }
}

define-command -params 0 keep-tabs %{
    remove-hooks window expand-tabs
}

hook global WinSetOption filetype=(?!makefile).* expand-tabs
hook global WinSetOption filetype=makefile keep-tabs

# Find
# ‾‾‾‾

define-command -docstring 'Find a file' -params 1 -shell-script-candidates %{ag -l -f} find %{ edit %arg{@} }

# Jump
# ‾‾‾‾

declare-option -hidden str jump_search_result

define-command -hidden -params 1 jump-helper %{
    evaluate-commands %sh{
        if [ "$1" -ef "${kak_buffile}" ]; then
            printf 'set-option global jump_search_result "%s"\n' "${kak_client}"
        fi
    }
}

define-command -override \
    -docstring %{jump [<options>] <file> [<line> [<column>]]

Takes all the same switches as edit.} \
    -params 1..3 \
    -file-completion \
    jump %{
    set-option global jump_search_result %opt{jumpclient}
    evaluate-commands %sh{
        for client in ${kak_client_list}; do
            echo "evaluate-commands -client \"${client}\" %{jump-helper \"$1\"}"
        done
    }
    evaluate-commands -try-client %opt{jump_search_result} %{
        edit %arg{@}
        try %{ focus }
    }
}

# Open Nearest Link
# ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

define-command \
    -docstring %{open-nearest-link: find a link on or after the cursor and open it} \
    open-nearest-link %{
    evaluate-commands -draft %{
        try %{
            execute-keys '<a-i><a-w><a-k>https?://<ret>'
            execute-keys '<a-|>xargs open<ret>'
        } catch %{
            execute-keys '/\bhttps?://[^\s]*<ret>'
            execute-keys '<a-|>xargs open<ret>'
        } catch %{
            echo -markup '{Error}no URL found.'
        }
    }
}

map global user o ': open-nearest-link<ret>'

# LSP
# ‾‾‾

evaluate-commands %sh{kak-lsp --kakoune -s "${kak_session}"}
