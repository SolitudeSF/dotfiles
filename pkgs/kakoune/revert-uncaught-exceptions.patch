diff --git a/src/file.cc b/src/file.cc
index 1bcbd756..36d354e6 100644
--- a/src/file.cc
+++ b/src/file.cc
@@ -273,13 +273,12 @@ void write_to_file(StringView filename, StringView data)
 
 struct BufferedWriter
 {
-    BufferedWriter(int fd)
-      : m_fd{fd}, m_exception_count{std::uncaught_exceptions()} {}
+    BufferedWriter(int fd) : fd{fd} {}
 
-    ~BufferedWriter() noexcept(false)
+    ~BufferedWriter()
     {
-        if (m_pos != 0 and m_exception_count == std::uncaught_exceptions())
-            Kakoune::write(m_fd, {m_buffer, m_pos});
+        if (pos != 0)
+            Kakoune::write(fd, {buffer, pos});
     }
 
     void write(StringView data)
@@ -287,13 +286,13 @@ struct BufferedWriter
         while (not data.empty())
         {
             const ByteCount length = data.length();
-            const ByteCount write_len = std::min(length, size - m_pos);
-            memcpy(m_buffer + (int)m_pos, data.data(), (int)write_len);
-            m_pos += write_len;
-            if (m_pos == size)
+            const ByteCount write_len = std::min(length, size - pos);
+            memcpy(buffer + (int)pos, data.data(), (int)write_len);
+            pos += write_len;
+            if (pos == size)
             {
-                Kakoune::write(m_fd, {m_buffer, size});
-                m_pos = 0;
+                Kakoune::write(fd, {buffer, size});
+                pos = 0;
             }
             data = data.substr(write_len);
         }
@@ -301,10 +300,9 @@ struct BufferedWriter
 
 private:
     static constexpr ByteCount size = 4096;
-    int m_fd;
-    int m_exception_count;
-    ByteCount m_pos = 0;
-    char m_buffer[(int)size];
+    int fd;
+    ByteCount pos = 0;
+    char buffer[(int)size];
 };
 
 
